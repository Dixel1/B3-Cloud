# Définit une tâche Ansible pour créer le chemin webroot
- name: Create webroot
  become: true
  file:
    path: "{{ item.nginx_webroot }}"
    state: directory
  with_items: "{{ vhosts }}"

# Définit une tâche Ansible qui va créer un fichier index.html dans le chemin webroot créé précedement
- name: Create index
  become: true
  copy:
    dest: "{{ item.nginx_webroot }}/index.html"
    content: "{{ item.nginx_index_content }}"
    mode: "0644"
  with_items: "{{ vhosts }}"

# Définit une tâche Ansible utilisant le module 'template' pour générer un fichier de configuration nginx personnalisé pour un virtual host défini dans la liste "vhosts"
- name: NGINX Virtual Host
  become: true
  template:
    src: vhost.conf.j2
    dest: /etc/nginx/conf.d/{{ item.nginx_servername }}.conf
    mode: "0644"
    notify: restart nginx
  with_items: "{{ vhosts }}"

# Définit une tâche Ansible qui utilise le module "ansible.posix.firewalld" pour autoriser l'accès à un port en utilisant le pare-feu Firewalld
- name: Authorize port
  become: true
  ansible.posix.firewalld:
    port: "{{ item.nginx_port }}/tcp"
    state: enabled
  with_items: "{{ vhosts }}"

# Définit une tâche Ansible qui utilise le module "service" pour redémarrer le service nginx après avoir effectué les changements nécessaires dans la configuration
- name: FW reload
  become: true
  service:
    name: nginx
    state: restarted
